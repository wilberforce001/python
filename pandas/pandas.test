import pandas

mydataset = {
    'cars': ["BMW", "Volvo", "Ford"], 
    'passings': [3, 7, 2]
}

myvar = pandas.DataFrame(mydataset)

print(myvar)


#Pandas as pd
import pandas as pd

mydataset = {
    'cars': ["BMW", "Volvo", "Ford"],
    'passings': [3, 7, 2]
}

myvar = pd.DataFrame(mydataset)

print(myvar)

#Checking Pandas Version

import pandas as pd

print(pd.__version__)

#What is a Series?
#A Pandas Series is like a column in a table.
#It is a one-dimensional array holding data of any type.
import pandas as pd

a = [1, 7, 2]

myvar = pd.Series(a)

print(myvar)

#Labels
#Can be used to access a specified value

#EXAMPLE to return a value of the series 
print(myvar[0])

#Create LABELS
import pandas as pd

a = [1, 7, 2]

myvar = pd.Series(a, index = ["x", "y", "z"])

print(myvar)

#When you have created labels, you can access an item by referring to the label.
#Return the value of "y":
print(myvar["y"])

#Key/Value Objects as Series
#Create a simple Pandas Series from a dictionary

import pandas as pd

calories = {"day1": 420, "day2": 380, "day3": 390}

myvar = pd.Series(calories)

print(myvar)

#use the index argument and specify only the items you want to include in the Series.
import pandas as pd

calories = {"day1": 420, "day2": 380, "day3": 390}

myvar = pd.Series(calories, index = ["day1", "day2"])

print(myvar)

#DataFrames
#Data sets in Pandas are usually multi-dimensional tables, called DataFrames.
#Series is like a column, a DataFrame is the whole table.

#Create a DataFrame from two Series:
import pandas as pd

data = {
    "calories": [420, 380, 390],
    "duration": [50, 40, 45]
}

myvar = pd.DataFrame(data)

print(myvar)

#Pandas use the loc attribute to return one or more specified row(s)
#refer to the row index
print(myvar.loc[0])

#Return row 0 and 1
#Use a list of indexes
print(myvar.loc[[0,1]])

#Named Indexes
#With the index argument, you can name your own indexes.
#Add a list of names to give each row a name
import pandas as pd

data = {
    "calories": [420, 380, 390],
    "duration": [50, 40, 45]
}

df = pd.DataFrame(data, index = ["day1", "day2", "day3"])

print(df)

#Load Files Into a DataFrame
#If your data sets are stored in a file, Pandas can load them into a DataFrame.
#Example, If your data sets are stored in a file, Pandas can load them into a DataFrame.
#Load a comma separated file (CSV file) into a DataFrame

import pandas as pd
df = pd.read_csv('data.csv')
print(df)